#!/bin/bash
export DOMAIN=${DOMAIN:-"vpn.alxzy.xyz"}
export XRAY_PUBLIC_KEY=${XRAY_PUBLIC_KEY:-"your_public_key_here"}
export VMESS_USER_FILE="/usr/local/etc/xray/users/vmess_users.json"
export VLESS_USER_FILE="/usr/local/etc/xray/users/vless_users.json"
export XRAY_CONFIG="/usr/local/etc/xray/config.json"
export DROPBEAR_PORT=$(grep -oP 'DROPBEAR_PORT=\K\d+' /etc/default/dropbear 2>/dev/null || echo "443")

# --- FUNGSI UTILITAS ---
function reload_services() {
  systemctl reload xray
  systemctl reload nginx
}

function get_uuid() {
  cat /proc/sys/kernel/random/uuid
}

# --- FUNGSI TAMPILAN ---
function system_info() {
    local iface=$(ip -4 route ls | grep default | grep -Po '(?<=dev )(\S+)' | head -1)
    local tx_bytes=$(cat /sys/class/net/${iface}/statistics/tx_bytes 2>/dev/null || echo 0)
    local rx_bytes=$(cat /sys/class/net/${iface}/statistics/rx_bytes 2>/dev/null || echo 0)
    local tx=$(numfmt --to=iec --suffix=B $tx_bytes)
    local rx=$(numfmt --to=iec --suffix=B $rx_bytes)
    local ram_usage=$(free -h | awk '/^Mem:/ {print $3 "/" $2}')
    local disk_usage=$(df -h / | awk 'NR==2 {print $3 "/" $2}')
    local xray_conn=$(journalctl -u xray --since "00:00:00" | grep "accepted" | wc -l)

    echo -e "\e[1;35m╔══════════════[ \e[1;36mSYSTEM INFORMATION\e[1;35m ]══════════════╗\e[0m"
    echo -e "║ \e[1;32mOS\e[0m            : \e[1;37m$(lsb_release -ds)\e[1;35m"
    echo -e "║ \e[1;32mUptime\e[0m        : \e[1;37m$(uptime -p)\e[1;35m"
    echo -e "║ \e[1;32mDomain\e[0m        : \e[1;32m$DOMAIN\e[0m"
    echo -e "║ \e[1;32mRAM\e[0m           : \e[1;37m$ram_usage\e[1;35m"
    echo -e "║ \e[1;32mDisk\e[0m          : \e[1;37m$disk_usage\e[1;35m"
    echo -e "║ \e[1;32mBandwidth TX\e[0m 📤: \e[1;37m$tx\e[1;35m"
    echo -e "║ \e[1;32mBandwidth RX\e[0m 📥: \e[1;37m$rx\e[1;35m"
    echo -e "║ \e[1;32mXray Conn\e[0m     : \e[1;37m$xray_conn koneksi hari ini\e[1;35m"
    echo -e "\e[1;35m╚══════════════════════════════════════════════════╝\e[0m"
}

# --- FUNGSI MANAJEMEN PENGGUNA ---
function create_user() {
  clear
  echo -e "\e[1;36m=================================\e[0m"
  echo -e " \e[1;37m       BUAT PENGGUNA BARU      \e[0m"
  echo -e "\e[1;36m=================================\e[0m"
  read -p "Username: " user
  if [[ -z "$user" ]]; then
    echo -e "\n\e[1;31m❌ Username tidak boleh kosong.\e[0m"; sleep 2; return
  fi
  read -p "Masa Aktif (hari): " exp
  exp_date=$(date -d "$exp days" +"%Y-%m-%d" 2>/dev/null)
  if [[ -z "$exp_date" ]]; then
    echo -e "\n\e[1;31m❌ Format masa aktif tidak valid.\e[0m"; sleep 2; return
  fi
  uuid=$(get_uuid)

  echo "Pilih Protokol: 1. VMess (WS) | 2. VLESS (WS & Reality) | 3. SSH (WS)"
  read -p "Pilihan [1-3]: " protocol_choice

  case $protocol_choice in
    1) # VMess
      jq --arg user "$user" --arg uuid "$uuid" --arg exp "$exp_date" \
         '. += [{"user": $user, "uuid": $uuid, "exp": $exp}]' "$VMESS_USER_FILE" > tmp.json && mv tmp.json "$VMESS_USER_FILE"
      jq ".inbounds[0].settings.clients += [{\"id\": \"$uuid\", \"alterId\": 0}]" "$XRAY_CONFIG" > tmp.json && mv tmp.json "$XRAY_CONFIG"
      reload_services
      vmess_ws="vmess://$(echo "{\"v\":\"2\",\"ps\":\"${user}_VMESS_WS\",\"add\":\"$DOMAIN\",\"port\":\"443\",\"id\":\"$uuid\",\"aid\":\"0\",\"net\":\"ws\",\"type\":\"none\",\"host\":\"$DOMAIN\",\"path\":\"/vmess-ws\",\"tls\":\"tls\",\"sni\":\"$DOMAIN\"}" | base64 -w 0)"
      clear
      echo -e "\n\e[1;32m✅ User VMess (WS) [$user] Dibuat!\e[0m\n   Expired on: $exp_date\n\n\e[1;36m--- Link Konfigurasi ---\e[0m\n$vmess_ws"
      ;;
    2) # VLESS
      jq --arg user "$user" --arg uuid "$uuid" --arg exp "$exp_date" \
         '. += [{"user": $user, "uuid": $uuid, "exp": $exp}]' "$VLESS_USER_FILE" > tmp.json && mv tmp.json "$VLESS_USER_FILE"
      jq ".inbounds[1].settings.clients += [{\"id\": \"$uuid\"}]" "$XRAY_CONFIG" > tmp.json && mv tmp.json "$XRAY_CONFIG"
      jq ".inbounds[2].settings.clients += [{\"id\": \"$uuid\"}]" "$XRAY_CONFIG" > tmp.json && mv tmp.json "$XRAY_CONFIG"
      reload_services
      vless_ws="vless://${uuid}@${DOMAIN}:443?security=tls&encryption=none&headerType=none&type=ws&path=%2Fvless-ws&sni=${DOMAIN}#${user}_VLESS_WS"
      vless_reality="vless://${uuid}@${DOMAIN}:8443?security=reality&encryption=none&pbk=${XRAY_PUBLIC_KEY}&headerType=none&type=tcp&flow=xtls-rprx-vision&sni=www.microsoft.com#${user}_VLESS_REALITY"
      clear
      echo -e "\n\e[1;32m✅ User VLESS [$user] Dibuat!\e[0m\n   Expired on: $exp_date\n\n\e[1;36m--- VLESS WebSocket (Port 443) ---\e[0m\n$vless_ws\n\n\e[1;36m--- VLESS REALITY (Port 8443) ---\e[0m\n$vless_reality"
      ;;
    3) # SSH
      read -s -p "Password SSH: " pass; echo ""
      useradd -e "$exp_date" -s /bin/false -M "$user"
      echo "$user:$pass" | chpasswd
      clear
      echo -e "\n\e[1;32m✅ User SSH [$user] Dibuat!\e[0m\n   Host: $DOMAIN\n   SSH over SSL/WS Port: 443\n   WebSocket Path: /ssh\n   Direct Dropbear Port: $DROPBEAR_PORT\n   Expired on: $exp_date"
      ;;
    *)
      echo "Pilihan tidak valid."
      ;;
  esac
  read -n 1 -s -r -p "Tekan tombol apa saja untuk kembali ke menu..."
}

function list_users() {
  clear
  echo -e "\e[1;36m=================================\e[0m\n \e[1;37m        DAFTAR PENGGUNA        \e[0m\n\e[1;36m=================================\e[0m\n"
  echo -e "\e[1;33m--- User SSH ---\e[0m"
  printf "%-20s | %s\n" "Username" "Kadaluwarsa"
  printf "%-20s | %s\n" "--------------------" "------------------"
  while IFS=: read -r user _ uid _ _ _ _; do
    if [[ "$uid" -ge 1000 ]]; then
      exp=$(chage -l "$user" | grep "Account expires" | awk -F": " '{print $2}')
      printf "\e[1;37m%-20s\e[0m | \e[1;32m%s\e[0m\n" "$user" "$exp"
    fi
  done < /etc/passwd

  echo -e "\n\e[1;33m--- User VMess (WebSocket) ---\e[0m"
  if jq -e '. | length == 0' "$VMESS_USER_FILE" >/dev/null; then
    echo "Tidak ada user VMess."
  else
    jq -r '.[] | "• \u001b[1;37m\(.user)\u001b[0m (Exp: \u001b[1;32m\(.exp)\u001b[0m)"' "$VMESS_USER_FILE"
  fi

  echo -e "\n\e[1;33m--- User VLESS (WS & Reality) ---\e[0m"
  if jq -e '. | length == 0' "$VLESS_USER_FILE" >/dev/null; then
    echo "Tidak ada user VLESS."
  else
    jq -r '.[] | "• \u001b[1;37m\(.user)\u001b[0m (Exp: \u001b[1;32m\(.exp)\u001b[0m)"' "$VLESS_USER_FILE"
  fi

  read -n 1 -s -r -p "Tekan tombol apa saja untuk kembali ke menu..."
}

function delete_user() {
  clear
  echo -e "\e[1;36m=================================\e[0m\n \e[1;37m        HAPUS PENGGUNA         \e[0m\n\e[1;36m=================================\e[0m\n"
  read -p "Masukkan Username yang akan dihapus: " user_to_del
  if [[ -z "$user_to_del" ]]; then
    echo -e "\n\e[1;31m❌ Username tidak boleh kosong.\e[0m"; sleep 2; return
  fi
  user_found=false
  if id "$user_to_del" &>/dev/null; then
    userdel -r "$user_to_del"
    echo -e "\e[1;32m✓ User SSH '$user_to_del' dihapus.\e[0m"
    user_found=true
  fi

  vmess_uuid=$(jq -r --arg user "$user_to_del" '.[] | select(.user == $user) | .uuid' "$VMESS_USER_FILE")
  if [[ -n "$vmess_uuid" ]]; then
    jq "map(select(.user != \"$user_to_del\"))" "$VMESS_USER_FILE" > tmp.json && mv tmp.json "$VMESS_USER_FILE"
    jq "(.inbounds[0].settings.clients) |= map(select(.id != \"$vmess_uuid\"))" "$XRAY_CONFIG" > tmp.json && mv tmp.json "$XRAY_CONFIG"
    echo -e "\e[1;32m✓ User VMess '$user_to_del' dihapus.\e[0m"
    user_found=true
  fi

  vless_uuid=$(jq -r --arg user "$user_to_del" '.[] | select(.user == $user) | .uuid' "$VLESS_USER_FILE")
  if [[ -n "$vless_uuid" ]]; then
    jq "map(select(.user != \"$user_to_del\"))" "$VLESS_USER_FILE" > tmp.json && mv tmp.json "$VLESS_USER_FILE"
    jq "(.inbounds[1].settings.clients) |= map(select(.id != \"$vless_uuid\"))" "$XRAY_CONFIG" > tmp.json && mv tmp.json "$XRAY_CONFIG"
    jq "(.inbounds[2].settings.clients) |= map(select(.id != \"$vless_uuid\"))" "$XRAY_CONFIG" > tmp.json && mv tmp.json "$XRAY_CONFIG"
    echo -e "\e[1;32m✓ User VLESS '$user_to_del' dihapus.\e[0m"
    user_found=true
  fi

  if [[ "$user_found" == true ]]; then
    reload_services
  else
    echo -e "\e[1;31mUser '$user_to_del' tidak ditemukan.\e[0m"
  fi

  read -n 1 -s -r -p "Tekan tombol apa saja untuk kembali ke menu..."
}

# --- FUNGSI MENU UTAMA ---
function main_menu() {
  while true; do
    system_info
    echo -e "\e[1;35m╔══════════════[ \e[1;36mMENU UTAMA\e[1;35m ]══════════════╗\e[0m"
    echo -e "║ \e[1;32m1.\e[0m \e[1;37mBuat Pengguna (All-in-One)\e[1;35m             ║"
    echo -e "║ \e[1;32m2.\e[0m \e[1;37mHapus Pengguna\e[1;35m                         ║"
    echo -e "║ \e[1;32m3.\e[0m \e[1;37mDaftar Pengguna\e[1;35m                        ║"
    echo -e "║ \e[1;32m4.\e[0m \e[1;37mPerbarui Sertifikat SSL\e[1;35m                ║"
    echo -e "║ \e[1;32m5.\e[0m \e[1;37mPembersihan Manual (Expired)\e[1;35m         ║"
    echo -e "║ \e[1;32m6.\e[0m \e[1;37mReboot Server\e[1;35m                          ║"
    echo -e "╟──────────────────────────────────────────╢"
    echo -e "║ \e[1;31m0.\e[0m \e[1;37mKeluar\e[1;35m                                 ║"
    echo -e "\e[1;35m╚══════════════════════════════════════════╝\e[0m"
    read -p "➡️  Pilih menu [0-6]: " pilih
    case $pilih in
      1) create_user ;;
      2) delete_user ;;
      3) list_users ;;
      4) systemctl stop nginx; certbot renew --force-renewal; systemctl start nginx; reload_services; read -n 1 -s -r -p "Selesai.";;
      5) /usr/local/bin/clear-expired; read -n 1 -s -r -p "Selesai.";;
      6) read -p "Anda yakin ingin reboot? (y/n): " confirm; if [[ "$confirm" == "y" || "$confirm" == "Y" ]]; then reboot; fi;;
      0) exit 0 ;;
      *) echo "Pilihan tidak valid." ; sleep 1 ;;
    esac
  done
}

main_menu